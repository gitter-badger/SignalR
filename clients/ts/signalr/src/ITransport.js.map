{"version":3,"file":"ITransport.js","sourceRoot":"","sources":["ITransport.ts"],"names":[],"mappings":"AAAA,sDAAsD;AACtD,+GAA+G;AAE/G,MAAM,CAAN,IAAY,iBAKX;AALD,WAAY,iBAAiB;IACzB,yDAAQ,CAAA;IACR,qEAAc,CAAA;IACd,iFAAoB,CAAA;IACpB,uEAAe,CAAA;AACnB,CAAC,EALW,iBAAiB,KAAjB,iBAAiB,QAK5B;AAED,MAAM,CAAN,IAAY,cAGX;AAHD,WAAY,cAAc;IACtB,mDAAQ,CAAA;IACR,uDAAM,CAAA;AACV,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nexport enum HttpTransportType {\r\n    None = 0,\r\n    WebSockets = 1,\r\n    ServerSentEvents = 2,\r\n    LongPolling = 3,\r\n}\r\n\r\nexport enum TransferFormat {\r\n    Text = 1,\r\n    Binary,\r\n}\r\n\r\nexport interface ITransport {\r\n    connect(url: string, transferFormat: TransferFormat): Promise<void>;\r\n    send(data: any): Promise<void>;\r\n    stop(): Promise<void>;\r\n    onreceive: (data: string | ArrayBuffer) => void;\r\n    onclose: (error?: Error) => void;\r\n}\r\n"]}